parameters:
  cms.twig.namespace: ''
  cms.twig.extension: '.twig'
  # convert cms-page to cms/page
  cms.twig.path_separator: '-'
  # ex for 2 : cms-folder-block-name => cms/folder/block-name
  cms.twig.path_max_depth: 0
#  cms.cache: 'cache.cms'
#  cms.cache: 'cms.cache.php'
  cms.cache.storage-path: '%kernel.cache_dir%/cms/php'

services:
  #  Efrogg\ContentRenderer\ModuleRenderer\:
  #    resource: '../src/Controller'
  #    tags: ['controller.service_arguments']
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  Efrogg\ContentRenderer\:
    resource: '../..'
#  Efrogg\ContentRenderer\ModuleRenderer\:
#    resource: '../../ModuleRenderer'
#
#  Efrogg\ContentRenderer\Module\:
#    resource: '../../Module'

  Efrogg\ContentRenderer\CmsRenderer:
    arguments:
      - '@cms.module_resolver'
      - '@cms.module_renderer_resolver'
    calls:
      - [ 'setNodeProvider',[ '@cms.node_provider' ] ]
      - [ 'initConfigurator',[ '@cms.twig_configurator' ] ]

  cms.twig_configurator:
    class: 'Efrogg\ContentRenderer\TwigConfigurator'
    arguments:
      - '@Efrogg\ContentRenderer\CmsRenderer'
      - '@cms.asset_resolver'
      - '@twig'

  cms.cache.php:
    class: 'Efrogg\ContentRenderer\Cache\VarExporterCache'
    arguments:
      - '%cms.cache.storage-path%'
      - '@cms.event_dispatcher'

  cms.event_dispatcher:
    class: 'Efrogg\ContentRenderer\Event\CmsEventDispatcher'

  # the node provider resolver will handle ALL NodeProviderInterface
  cms.node_provider_resolver:
    class: 'Efrogg\ContentRenderer\NodeProvider\NodeProviderResolver'
    calls:
      - ['addSolvers',[!tagged_iterator cms.node_provider]] # ContainerTag::TAG_NODE_PROVIDER

  cms.module_resolver:
    class: 'Efrogg\ContentRenderer\Module\ModuleResolver'
    calls:
      - ['addSolvers',[!tagged_iterator cms.module]] # ContainerTag::TAG_MODULE


  # an alias is created, in order to be substituted by the cache node provider
  cms.node_provider:
    alias: 'cms.node_provider_resolver'

  Efrogg\ContentRenderer\ModuleRenderer\TwigNamespaceModuleRenderer:
    arguments:
      - '@twig'
      - '%cms.twig.namespace%'
      - '%cms.twig.extension%'
      - '%cms.twig.path_separator%'
      - '%cms.twig.path_max_depth%'

  cms.asset_resolver:
    class: 'Efrogg\ContentRenderer\Asset\AssetResolver'
    calls:
      - ['addSolvers',[!tagged_iterator cms.asset_handler]] # ContainerTag::TAG_ASSET_HANDLER

  cms.module_renderer_resolver:
    class: 'Efrogg\ContentRenderer\ModuleRenderer\ModuleRendererResolver'
    calls:
      - ['addSolvers',[!tagged_iterator cms.module_renderer]] # ContainerTag::TAG_MODULE_RENDERER



  _instanceof:
    Efrogg\ContentRenderer\ModuleRenderer\ModuleRendererInterface:
      tags: [!php/const Efrogg\ContentRenderer\Core\Resolver\ContainerTag::TAG_MODULE_RENDERER]

    Efrogg\ContentRenderer\Module\ModuleInterface:
      tags: [!php/const Efrogg\ContentRenderer\Core\Resolver\ContainerTag::TAG_MODULE]

